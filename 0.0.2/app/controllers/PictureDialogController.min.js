define(["exports"],function(exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();exports.PictureDialogController=function(){function PictureDialogController($mdDialog,$translate,Upload,locals){_classCallCheck(this,PictureDialogController),this.$mdDialog=$mdDialog,this.$scope=locals.scope,this.$rootScope=locals.rootScope,this.$translate=$translate,this.Upload=Upload,this.uploaded=!1,this.sizes=["xs","sm","md","lg","xl"],this.files={},this.progress={},this.images=locals.images,console.log(this.$scope)}return _createClass(PictureDialogController,[{key:"hide",value:function(){this.$mdDialog.hide()}},{key:"save",value:function(){this.$scope.$emit("onSaveData",{scope:this.$scope,data:{images:this.images}}),console.log("SAVE DATA"),this.$mdDialog.hide()}},{key:"submitHandler",value:function(){var _this=this;if(Object.keys(this.files).length){var _loop=function(size){var file=_this.files[size];_this.Upload.upload({url:_this.$rootScope.imageUploadUrl,data:{file:file}}).then(function(resp){_this.images[size]=resp.data.url,Object.keys(_this.images).length===Object.keys(_this.files).length&&(console.log("+++ dfghj",_this.images),_this.hide())},function(resp){_this.$translate("Error while uploading").then(function(translated){_this.$mdToast.show(_this.$mdToast.simple().textContent(translated+" Code: "+resp.status).position("bottom left").hideDelay(3e3))})},function(e){console.log(e.total,e.loaded),_this.progress[size]=parseInt(100*e.loaded/e.total)})};for(var size in this.files)_loop(size)}}}]),PictureDialogController}()});