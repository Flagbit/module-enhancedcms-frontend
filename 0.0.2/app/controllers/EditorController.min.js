define(["exports"],function(exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),EditorController=function(){function EditorController($rootScope,$scope,$element){_classCallCheck(this,EditorController),this.$rootScope=$rootScope,this.$scope=$scope,this.$scope.$element=$element,this.$scope._editorInstance=null,this.initEvents(),this.setElementEditable(),this.getEditorInstance()}return _createClass(EditorController,[{key:"setElementEditable",value:function(){this.$scope.$element.prop("contenteditable","true")}},{key:"initEvents",value:function(){this.$scope.$element.click(this.onClick.bind(this)),this.$scope.$on("remove",this.remove.bind(this))}},{key:"onClick",value:function(event){this.getEditorInstance()||(this.$scope._editorInstance=CKEDITOR.inline(event.currentTarget),this.initEditorEvents())}},{key:"getEditorInstance",value:function(){if(!this.$scope._editorInstance)for(var i in CKEDITOR.instances)if(CKEDITOR.instances.hasOwnProperty(i)&&this.$scope.$element.is(CKEDITOR.instances[i].element.$))return this.$scope._editorInstance=CKEDITOR.instances[i],this.initEditorEvents(),this.$scope._editorInstance;return this.$scope._editorInstance}},{key:"initEditorEvents",value:function(){var editor=this.getEditorInstance();editor.on("focus",this.onFocus.bind(this)),editor.on("blur",this.onBlur.bind(this))}},{key:"onFocus",value:function(){this.$scope.$emit("hideToolbar")}},{key:"onBlur",value:function(){this.$scope.$emit("showToolbar")}},{key:"remove",value:function(event,mass){this.getEditorInstance()&&(this.getEditorInstance().destroy(),this.$scope._editorInstance=null)}}]),EditorController}();exports["default"]=EditorController});