define(["exports","jquery","../classes/Utils.min.js","./PanelController.min.js","Flagbit_EnhancedCMS/js/jsonform/config"],function(exports,_jquery,_UtilsMin,_PanelControllerMin){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _jquery2=_interopRequireDefault(_jquery),_UtilsMin2=_interopRequireDefault(_UtilsMin),_PanelControllerMin2=_interopRequireDefault(_PanelControllerMin),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},ConfigController=function(_PanelController){function ConfigController($rootScope,$scope,mdPanelRef,$timeout,$compile,$log,$q,$templateRequest,$templateCache,targetScope,$translate){_classCallCheck(this,ConfigController);var _this=_possibleConstructorReturn(this,(ConfigController.__proto__||Object.getPrototypeOf(ConfigController)).call(this,$rootScope,$scope,mdPanelRef,$timeout,$compile,$log,$q,$templateRequest,$templateCache,targetScope,$translate));return _this.$translate("Configure Widget").then(function(translated){_this.$scope.title=translated}),_this.$scope.isWidgetConfigLoading=!1,_this.$scope.isWidgetConfigEmpty=!0,_this.$scope.isWidgetConfigSaving=!1,_this.$scope.isWidgetConfigUploading=!1,_this.$scope.unsaved=!1,_this.$scope.currentData={},_this.$scope.uploadCount=0,_this.$scope.targetScope.openConfig=_this.openConfig.bind(_this),_this.$scope.title=_this.findTitle(),_this.initializePromise.then(function(){}),_this}return _inherits(ConfigController,_PanelController),_createClass(ConfigController,[{key:"getTemplateFile",value:function(){return"config.html"}},{key:"initEventListeners",value:function(){var _this2=this;_get(ConfigController.prototype.__proto__||Object.getPrototypeOf(ConfigController.prototype),"initEventListeners",this).call(this),this.$scope.$on("onSaveData",function(event,mass){_this2.save(mass.data)}),this.$scope.$on("onPreviewData",function(event,mass){_this2.preview(mass.data)}),this.$scope.$on("loaded",function(event,mass){_this2.$scope.formElement=_this2.mdPanelRef.panelContainer.find("#ecms-config-dialog-form"),_this2.loadForm()}),this.$scope.$on("uploadDone",function(event,mass){_this2.$scope.currentData=_jquery2["default"].extend(_this2.$scope.currentData,mass.data),_this2.$scope.uploadCount--,0==_this2.$scope.uploadCount&&_this2._save()})}},{key:"openConfig",value:function(e){this.onFocus(e),this.maximize()}},{key:"onFocus",value:function(e){_get(ConfigController.prototype.__proto__||Object.getPrototypeOf(ConfigController.prototype),"onFocus",this).call(this,e),"dragstart"!=e.type&&this.$scope.targetScope.ctrl.onFocus()}},{key:"onBlur",value:function(e){_get(ConfigController.prototype.__proto__||Object.getPrototypeOf(ConfigController.prototype),"onBlur",this).call(this),this.$scope.targetScope.ctrl.onBlur()}},{key:"onClose",value:function(){_get(ConfigController.prototype.__proto__||Object.getPrototypeOf(ConfigController.prototype),"onClose",this).call(this),this.$scope.targetScope.openConfig=!1}},{key:"removeForm",value:function(){this.$scope.formElement.html("")}},{key:"loadForm",value:function(){var _this3=this;this.$log.debug("loading form...");var wScope=this.$scope.targetScope;if(this.$scope.isWidgetConfigLoading=!0,wScope.$widget){var fields={};_jquery2["default"].isEmptyObject(wScope.$widget.getConfig())||_jquery2["default"].extend(fields,wScope.$widget.getConfig()),fields=_jquery2["default"].extend(fields,wScope.globalData.config);var values={};if(wScope.data&&(values=wScope.data),_jquery2["default"].isEmptyObject(fields))return void(this.$scope.isWidgetConfigLoading=!1);this.$scope.widgetConfigOriginalData=values;var formData=[],schema={},groups={};this.$scope.contentClasses=[],_jquery2["default"].each(fields,function(name,field){if(field.options){var options=field.options;options.defaultValues&&_jquery2["default"].each(options.defaultValues,function(name,value){_this3.$scope.widgetConfigOriginalData[name]||(_this3.$scope.widgetConfigOriginalData[name]=value)}),options.value&&(_this3.$scope.widgetConfigOriginalData[name]||(_this3.$scope.widgetConfigOriginalData[name]=options.value));var d={key:name,onChange:function(){_this3.preview()}};options.form&&(d=_jquery2["default"].extend({},d,options.form)),options.values&&(options["enum"]=_jquery2["default"].map(options.values,function(element,index){return index}),d.titleMap=options.values),schema[name]=options,options.contentClass&&_this3.$scope.contentClasses.push(name),options.group&&(groups[options.group]||(groups[options.group]=[]),d.key=name,groups[options.group].push(d))}}),this.$scope.currentData=angular.copy(this.$scope.widgetConfigOriginalData),_jquery2["default"].each(groups,function(title,options){formData.push({type:"fieldset",title:title,items:options})}),this.$scope.formElement.jsonForm({schema:schema,value:this.$scope.widgetConfigOriginalData,form:formData}),this.$scope.formElement.find(".ecms-config-compile").each(function(idx,el){el=(0,_jquery2["default"])(el),el.html(_this3.$compile(el.html())(_this3.$scope))}),this.$scope.formElement.find("input,select").on("focus",this.onFocus.bind(this)).on("blur",this.onBlur.bind(this)),this.$scope.isWidgetConfigLoading=!1,this.$scope.isWidgetConfigEmpty=!1}}},{key:"cancel",value:function(){this.$scope.targetScope.ctrl.afterConfigure(this.$scope.widgetConfigOriginalData),_get(ConfigController.prototype.__proto__||Object.getPrototypeOf(ConfigController.prototype),"cancel",this).call(this)}},{key:"triggerPreview",value:function(){this.$scope.$broadcast("beforePreview",{scope:this.$scope.targetScope,data:this.$scope.currentData}),this.$scope.targetScope.ctrl.previewConfig(this.$scope.currentData),this.$scope.$broadcast("afterPreview",{scope:this.$scope.targetScope,data:this.$scope.currentData})}},{key:"preview",value:function(){var additionalData=arguments.length>0&&void 0!==arguments[0]&&arguments[0],data=this.$scope.formElement.serializeArray();data=_UtilsMin2["default"].keyValuePairToObject(data),data=_jquery2["default"].extend(this.$scope.currentData,data,additionalData?additionalData:{}),data.contentClasses=this.getContentClasses(data,this.$scope.contentClasses),this.$scope.currentData=data,this.$scope.unsaved=!angular.equals(data,this.$scope.widgetConfigOriginalData),this.triggerPreview()}},{key:"save",value:function(){this.$scope.unsaved=!1;var data=this.$scope.currentData;this.$scope.$broadcast("beforeSave",{scope:this.$scope.targetScope,configScope:this.$scope,data:data}),"undefined"==typeof this.$scope.$$listenerCount.uploadStart||this.$scope.$$listenerCount.uploadStart<=0?this._save():(this.$scope.uploadCount=this.$scope.$$listenerCount.uploadStart,this.$scope.isWidgetConfigUploading=!0,this.$rootScope.$safeApply(this.$scope),this.$scope.$broadcast("uploadStart",{scope:this.$scope.targetScope,configScope:this.$scope}))}},{key:"_save",value:function(){var _this4=this;this.$scope.isWidgetConfigSaving=!0,this.$scope.isWidgetConfigUploading=!1;var data=this.$scope.currentData;this.$scope.widgetConfigOriginalData=angular.copy(data),this.$scope.targetScope.ctrl.afterConfigure(data),this.$scope.$broadcast("afterSave",{scope:this.$scope.targetScope,configScope:this.$scope,data:data}),setTimeout(function(){_this4.$scope.isWidgetConfigSaving=!1,_this4.$rootScope.$safeApply(_this4.$scope)},1e3)}},{key:"getContentClasses",value:function(data,contentClasses){var _contentClasses=[];return contentClasses.length&&_jquery2["default"].each(contentClasses,function(idx,contentClass){data[contentClass]&&_contentClasses.push(data[contentClass])}),_contentClasses}},{key:"findTitle",value:function(){var el=this.$scope.targetScope.$element,headings=el.find("h1,h2,h3,h4").first();headings&&(el=headings);var text=el.text().trim();return text=text.length<15?text:text.substr(0,15).trim()+"...",text||(text=this.$scope.title,this.$scope.targetScope.$widget&&this.$scope.targetScope.$widget.getTitle()&&(text=this.$scope.targetScope.$widget.getTitle(),text=text.length<15?text:text.substr(0,15).trim()+"...")),text}}]),ConfigController}(_PanelControllerMin2["default"]);exports["default"]=ConfigController});