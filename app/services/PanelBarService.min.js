define(["exports","jquery"],function(exports,_jquery){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _jquery2=_interopRequireDefault(_jquery),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),PanelBarService=function(){function PanelBarService($rootScope,$mdPanel){_classCallCheck(this,PanelBarService),this.$rootScope=$rootScope,this.$mdPanel=$mdPanel}return _createClass(PanelBarService,[{key:"initialize",value:function(){this.panelIndex=0,this.panels={},this.initEventListeners()}},{key:"initEventListeners",value:function(){this.$rootScope.$on("panelAddToBar",this.addPanel.bind(this)),this.$rootScope.$on("panelRemoveFromBar",this.removePanel.bind(this))}},{key:"addPanel",value:function(mass,data){this.panels[data.scope.$id]=data,this.movePanels()}},{key:"removePanel",value:function(mass,data){this.panels[data.scope.$id]&&(this.panels[data.scope.$id].positionElement.css(this.panels[data.scope.$id].position),delete this.panels[data.scope.$id],this.movePanels())}},{key:"calculateCurrentOffset",value:function(){var viewportWidth=(0,_jquery2["default"])(window).width(),offset=0;return _jquery2["default"].each(this.panels,function(key,value){offset+=value.sizeElement.width()}),viewportWidth/2-offset/2}},{key:"movePanels",value:function(){var viewportHeight=(0,_jquery2["default"])(window).height(),offset=0,pageOffset=this.calculateCurrentOffset();_jquery2["default"].each(this.panels,function(key,value){value.positionElement.css({left:pageOffset+offset,top:viewportHeight-value.sizeElement.height()}),offset+=value.sizeElement.width()})}}]),PanelBarService}();exports["default"]=PanelBarService}),define(["exports","jquery"],function(exports,_jquery){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _jquery2=_interopRequireDefault(_jquery),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),PanelBarService=function(){function PanelBarService($rootScope,$mdPanel){_classCallCheck(this,PanelBarService),this.$rootScope=$rootScope,this.$mdPanel=$mdPanel}return _createClass(PanelBarService,[{key:"initialize",value:function(){this.panelIndex=0,this.panels={},this.initEventListeners()}},{key:"initEventListeners",value:function(){this.$rootScope.$on("panelAddToBar",this.addPanel.bind(this)),this.$rootScope.$on("panelRemoveFromBar",this.removePanel.bind(this))}},{key:"addPanel",value:function(mass,data){this.panels[data.scope.$id]=data,this.movePanels()}},{key:"removePanel",value:function(mass,data){this.panels[data.scope.$id]&&(this.panels[data.scope.$id].positionElement.css(this.panels[data.scope.$id].position),delete this.panels[data.scope.$id],this.movePanels())}},{key:"calculateCurrentOffset",value:function(){var viewportWidth=(0,_jquery2["default"])(window).width(),offset=0;return _jquery2["default"].each(this.panels,function(key,value){offset+=value.sizeElement.width()}),viewportWidth/2-offset/2}},{key:"movePanels",value:function(){var viewportHeight=(0,_jquery2["default"])(window).height(),offset=0,pageOffset=this.calculateCurrentOffset();_jquery2["default"].each(this.panels,function(key,value){value.positionElement.css({left:pageOffset+offset,top:viewportHeight-value.sizeElement.height()}),offset+=value.sizeElement.width()})}}]),PanelBarService}();exports["default"]=PanelBarService});